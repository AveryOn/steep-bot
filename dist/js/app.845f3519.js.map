{"version":3,"file":"js/app.845f3519.js","mappings":"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","sources":["webpack://steep-bot/./src/tools/animateText.ts","webpack://steep-bot/./src/components/messageBotComp.vue?3ccd","webpack://steep-bot/./src/components/messageBotComp.vue","webpack://steep-bot/./src/components/buttonComp.vue","webpack://steep-bot/./src/components/buttonComp.vue?9522","webpack://steep-bot/./src/views/botView.vue?f677","webpack://steep-bot/./src/views/botView.vue","webpack://steep-bot/./src/App.vue?2a5e","webpack://steep-bot/./src/App.vue","webpack://steep-bot/./src/registerServiceWorker.ts","webpack://steep-bot/./src/store/index.ts","webpack://steep-bot/./src/main.ts","webpack://steep-bot/webpack/bootstrap","webpack://steep-bot/webpack/runtime/chunk loaded","webpack://steep-bot/webpack/runtime/compat get default export","webpack://steep-bot/webpack/runtime/define property getters","webpack://steep-bot/webpack/runtime/global","webpack://steep-bot/webpack/runtime/hasOwnProperty shorthand","webpack://steep-bot/webpack/runtime/publicPath","webpack://steep-bot/webpack/runtime/jsonp chunk loading","webpack://steep-bot/webpack/startup"],"sourcesContent":["// Функция анимации появления текста\r\n// Писал давно, не помню как работает, поэтому не стал тратить время на доскональное комментирование\r\nfunction animateText(text: string, callback: (result: string, isStop?: boolean) => void, onlyUp: boolean = false, delay: number = 60): void {\r\n    let arrayWords: string[] = text.split('');\r\n    let resultText: string = '';\r\n    let count: number = 0;\r\n    for (let word of arrayWords) {\r\n        count++\r\n        setTimeout(() => {\r\n            resultText += word;\r\n            callback(resultText);\r\n            if (resultText.length === text.length) {\r\n                callback(resultText, true);\r\n            }\r\n        }, count * delay);\r\n    }\r\n    if (!onlyUp) {\r\n        setTimeout(() => {\r\n            arrayWords = resultText.split('');\r\n            for (let word of arrayWords) {\r\n                count++\r\n                setTimeout(() => {\r\n                    arrayWords.pop()\r\n                    callback(arrayWords.join(''));\r\n                }, count * 40);\r\n            }\r\n        }, count * 100);\r\n    }\r\n    else return;\r\n}\r\n\r\nexport default animateText;","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '../assets/chatbot.png'\nimport _imports_1 from '../assets/profile.png'\n\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-b82d5db6\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"message-container\" }\nconst _hoisted_2 = [\"id\"]\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"message__icon\" }, [\n  /*#__PURE__*/_createElementVNode(\"img\", {\n    class: \"message__icon img\",\n    src: _imports_0,\n    alt: \"chatbot-icon\"\n  })\n], -1))\nconst _hoisted_4 = [\"id\"]\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"message__icon\" }, [\n  /*#__PURE__*/_createElementVNode(\"img\", {\n    class: \"message__icon img\",\n    src: _imports_1,\n    alt: \"profile-icon\"\n  })\n], -1))\n\nimport { ref, computed, onMounted } from 'vue';\r\nimport { MessageBotType } from '../types/messageBotType';\r\nimport animateText from '../tools/animateText';\r\nimport gsap from 'gsap';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'messageBotComp',\n  props: {\n    data: {}\n  },\n  emits: ['readyBotMessage'],\n  setup(__props: any, { emit }) {\n\nconst props = __props;\n\r\n\r\n\r\n\r\n\r\n// Анимированный контент сообщения\r\nconst content = ref('');\r\n\r\n// Стили для сообщений бота\r\nconst contentBotStyle = computed(() => {\r\n    if(!props.data.isFirstMessage && !props.data.isLastMessage) {\r\n        return {\r\n            borderTopLeftRadius: '0px',\r\n            borderBottomLeftRadius: '0px'\r\n        }\r\n    }\r\n    if(!props.data.isFirstMessage && props.data.isLastMessage) {\r\n        return {\r\n            borderTopLeftRadius: '0px',\r\n            borderBottomLeftRadius: '10px'\r\n        }\r\n    }\r\n});\r\n\r\n// Стили для сообщений Пользователя\r\nconst contentUserStyle = computed(() => {\r\n    if(!props.data.isFirstMessage && !props.data.isLastMessage) {\r\n        return {\r\n            borderTopRightRadius: '0px',\r\n            borderBottomRightRadius: '0px'\r\n        }\r\n    }\r\n    if(!props.data.isFirstMessage && props.data.isLastMessage) {\r\n        return {\r\n            borderTopRightRadius: '0px',\r\n            borderBottomRightRadius: '10px'\r\n        }\r\n    }\r\n});\r\n\r\nonMounted( async () => {\r\n\r\n    /* Корректировка стилей сообщений в зависимости от их расположения в чате */ф\r\n    const message = document.getElementById(props.data.id) as HTMLDivElement;\r\n    // Если Сообщение отправил Пользователь а не БОТ\r\n    if(!props.data.fromBot) {\r\n        // Анимация появления пользовательского сообщения\r\n        gsap.to('.message.user', { duration: 0.5, right: 0 });\r\n        if(typeof props.data.content === 'string') {\r\n            content.value = props.data.content;\r\n        }\r\n        // Если сообщение не в начале партии сообщений (а к примеру второе и т.п)\r\n        // Тогда для иммитации явной партии сообщений убираются иконки\r\n        if(!props.data.isFirstMessage) {\r\n            message.style.marginRight = '7px'\r\n            const icon = message.childNodes[1] as HTMLImageElement;\r\n            icon.style.visibility = 'hidden';\r\n            icon.style.height = '0px';\r\n        } else {\r\n            // Для Сообщения который является первым из пачки сообщений делаем отступ его контейнеру\r\n            const container = message.parentNode as HTMLDivElement;\r\n            container.style.marginTop = '10px'\r\n        }\r\n    }\r\n    // Если это сообщение создал БОТ\r\n    if(props.data.fromBot) {\r\n        // Анимация появления сообщения БОТА\r\n        gsap.to('.message.bot', { duration: 0.5, left: 0 });\r\n        if(typeof props.data.content === 'string') {\r\n            // Для сообщений бота добавил свою функцию анимирования текста.\r\n            // Параметр isReady в колбэке говорит о том, что анимация текста окончена\r\n            animateText(props.data.content, (result, isReady) => {\r\n                if(isReady) {\r\n                    // событие readyBotMessage будет использовано для реализации необходимой логики на освнове окончания анимации текста\r\n                    emit('readyBotMessage')\r\n                }\r\n                // callback вызывается на каждый символ в тексте, парамтер result передает нарастающее со временем сообщение и записывает\r\n                // его в тело сообщения \r\n                content.value = result;\r\n            }, true, 50);\r\n        }\r\n        // Если сообщение не в начале партии сообщений (а к примеру второе и т.п)\r\n        // Тогда для иммитации явной партии сообщений убираются иконки\r\n        const icon = message.childNodes[0] as HTMLImageElement;\r\n        if(!props.data.isFirstMessage) {\r\n            icon.style.visibility = 'hidden';\r\n            icon.style.height = '0px';\r\n        } else {\r\n            // Для первого сообщения выравнивание для корректного отображения\r\n            const container = message.parentNode as HTMLDivElement;\r\n            container.style.marginTop = '10px'\r\n            message.style.alignItems = 'flex-end';\r\n        }\r\n    }\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (props.data.fromBot)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"message bot\",\n          id: props.data.id\n        }, [\n          _hoisted_3,\n          _createElementVNode(\"p\", {\n            class: \"message__content bot\",\n            style: _normalizeStyle(contentBotStyle.value)\n          }, _toDisplayString(content.value), 5)\n        ], 8, _hoisted_2))\n      : (_openBlock(), _createElementBlock(\"div\", {\n          key: 1,\n          class: \"message user\",\n          id: props.data.id\n        }, [\n          _createElementVNode(\"p\", {\n            class: \"message__content user\",\n            style: _normalizeStyle(contentUserStyle.value)\n          }, _toDisplayString(content.value), 5),\n          _hoisted_5\n        ], 8, _hoisted_4))\n  ]))\n}\n}\n\n})","import script from \"./messageBotComp.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./messageBotComp.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./messageBotComp.vue?vue&type=style&index=0&id=b82d5db6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b82d5db6\"]])\n\nexport default __exports__","<!-- Не классическая кнопка а опция (реплика) выбора, которую выдвает бот как доступные варианты вопросов -->\r\n<template>\r\n    <div class=\"button\">\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n\r\n<style scoped>\r\n.button {\r\n    position: relative;\r\n    height: max-content;\r\n    width: max-content;\r\n    padding: 5px 15px;\r\n    border: 3px solid rgba(15, 15, 15, 0.2);\r\n    border-radius: 10px;\r\n    background-color: #43cfb8;\r\n    font-style: italic;\r\n    transition: all 0.2s ease;\r\n    box-shadow: 2px 2px 10px rgba(0, 0, 0, .4);\r\n    margin: 2px;\r\n    cursor: pointer;\r\n}\r\n.button:hover {\r\n    transition: all 0.2s ease;\r\n    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0);\r\n}\r\n</style>","import { render } from \"./buttonComp.vue?vue&type=template&id=7a013f04&scoped=true\"\nconst script = {}\n\nimport \"./buttonComp.vue?vue&type=style&index=0&id=7a013f04&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7a013f04\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-dca8b3a0\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"bot-view\" }\nconst _hoisted_2 = { class: \"bot-view__chat-block\" }\nconst _hoisted_3 = { class: \"bot-view__options\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"bot-view__bot-menu\",\n  id: \"bot-menu\"\n}, null, -1))\n\nimport gsap from 'gsap';\r\nimport { ref, watch, onMounted } from 'vue';\r\nimport messageBotComp from '@/components/messageBotComp.vue';\r\nimport buttonComp from '@/components/buttonComp.vue';\r\nimport { MessageBotType } from '../types/messageBotType';\r\n\r\n// Массив с сообщениями виджета\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'botView',\n  setup(__props) {\n\r\nconst messages = ref<MessageBotType[]>([]);\r\n\r\n// Служит в роли шлюза для того чтобы рендерить или убирать компонент с набором реплик (опций)\r\nconst isSelectOption = ref<boolean>(false);\r\n\r\n// Накладывает анимации появления на набор реплик (опций)\r\nfunction openOptionsMenu(tl: gsap.core.Timeline) {\r\n    gsap.to('.bot-view__options', { duration: 0.4, left: '0%' });\r\n    tl.to('#pizza', { duration: 0.4, left: 0 });\r\n    tl.to('#alarm', { duration: 0.3, left: 0 });\r\n    tl.to('#weather', { duration: 0.2, left: 0 });\r\n}\r\n\r\n// Накладывает анимации скрытия на набор реплик (опций)\r\nfunction closeOptionsMenu(){\r\n    gsap.to('.bot-view__options', { duration: 0.4, left: '-100%' });\r\n    gsap.to('#pizza', { duration: 0.4, left: '-100%' });\r\n    gsap.to('#alarm', { duration: 0.3, left: '-100%' });\r\n    gsap.to('#weather', { duration: 0.2, left: '-100%' });\r\n}\r\n\r\n// Обработчик событий, которое я определил в компоненте messageBotComp. Отрабатывает когда, анимация текста сообщения завершена.\r\nfunction messageBotReady() {\r\n    const blockMessages = document.querySelector('.bot-view__chat-block') as HTMLDivElement;\r\n    // Скролит блок сообщений вниз автоматический всякий раз когда анимация сообщения завершена\r\n    setTimeout(() => {\r\n        blockMessages.scroll({\r\n            top: blockMessages.scrollHeight,\r\n            behavior: \"smooth\",\r\n        });\r\n    }, 0);\r\n}\r\n\r\n// Служит для выборки реплки (опции), предложенных ботом.\r\nasync function selectionOption(elementID: 'pizza' | 'alarm' | 'weather') {\r\n    // При выборе реплики (опции) происходит анимация скрытия реплик\r\n    closeOptionsMenu();\r\n    // создание таймлайна для последовательного выполнения анимаций\r\n    const tl = gsap.timeline();\r\n    const content = (document.getElementById(elementID) as HTMLButtonElement).innerText;\r\n    // создает новое сообщение с контентом который был расположен в innerText кнопки реплики (опции)\r\n    await createMessage(false, { id: `ID-${Date.now()}`, content});\r\n    // Иммитация перегрузки, для того, чтобы создать сообщение с подходящим реплике(опции) контентом\r\n    if(elementID === 'pizza') await createMessage(true, { id: `ID-${Date.now()}`, content: \"Okay, I'll order a pizza. Is there anything else I can do?\"}, 900);\r\n    if(elementID === 'alarm') await createMessage(true, { id: `ID-${Date.now()}`, content: \"Okay, I set an alarm. Is there anything else I can do?\"}, 900);\r\n    if(elementID === 'weather') await createMessage(true, { id: `ID-${Date.now()}`, content: \"The weather is simply magnificent! Is there anything else I can do?\"}, 900);\r\n    // Костыльный timeout, подстраивал так, чтобы он снова открывал набор реплик(опций) ровно после того, когда ответное сообщение бота \r\n    // было сформировано\r\n    setTimeout(() => {\r\n        // Рендерит блок с репликами(опциями)\r\n        isSelectOption.value = true;\r\n        openOptionsMenu(tl)\r\n    }, 3000 );\r\n\r\n}\r\n\r\n// Создает новое сообщение\r\n// isBot - Указывает на то, создается ли сообщение ботом или пользователем\r\n// data - необходимые данные сообщения, которые отвеают за контент, отрисовку, позиционирование и оформление (через JS)\r\nfunction createMessage(isBot: boolean, data: MessageBotType, delay = 200): Promise<number> {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            // Берет последнее сообщение из массива чатов для того, чтобы решить задачу с компоновкой нескольких сообщений\r\n            // в одну партию, если они отправлены подряд одно за другим одним из собеседников чата\r\n            const lastMessage: MessageBotType | undefined = messages.value[messages.value.length - 1];\r\n            // Если предыдущее сообщение в чате существует\r\n            if(lastMessage) {\r\n                // Если сообщение создается Ботом\r\n                if(isBot) {\r\n                    // Если у сообщения поле fromBot true, тогда указываем последнему сообщению в массиве, что оно теперь не последнее\r\n                    // Так как новосозданное сообщение будет последним (замыкающим)\r\n                    if(lastMessage.fromBot) {\r\n                        messages.value[messages.value.length - 1].isLastMessage = false;\r\n                        // Поэтому данное сообщение не может быть первым, так как перед ним есть еще одно сообщение от его же создателя\r\n                        // (входит в его партию)\r\n                        data.isFirstMessage = false;\r\n                        // Так как это новосозданное сообщение, то оно будет являтся последним вообщем.\r\n                        data.isLastMessage = true;\r\n                        // Обязательно указывается поле fromBot, для коректировки стилей\r\n                        data.fromBot = isBot;\r\n                        setTimeout(() => { \r\n                            // с задержкой добавляем созданный объект сообщения\r\n                            return resolve(messages.value.push(data)); \r\n                        }, delay);\r\n                    } else {\r\n                        // Если предыдущее сообщение не было от БОТА, а от пользователя, то мы объявляем последнее сообщение последней\r\n                        // из своей партии, так как сейчас будет создаваться сообщение БОТОМ (и будет инициализирована новая партия сообщений бота)\r\n                        messages.value[messages.value.length - 1].isLastMessage = true;\r\n                        // Так как данное сообщение открывает новую партию сообщений, то указываем, что оно первое\r\n                        data.isFirstMessage = true;\r\n                        // также оно является последним, потому что оно новосозданное\r\n                        data.isLastMessage = true;\r\n                        data.fromBot = isBot;\r\n                        setTimeout(() => { \r\n                            // Добавление в общий массив\r\n                            return resolve(messages.value.push(data)); \r\n                        }, delay);\r\n                    }\r\n                }\r\n                // Если сообщение создается Пользователем\r\n                else if(!isBot) {\r\n                    // Если предыдущее сообщение было от БОТА \r\n                    if(lastMessage.fromBot) {\r\n                        // Объявялем о новой партии сообщений указывая данному сообщению, что оно первое в своей партии\r\n                        data.isFirstMessage = true;\r\n                        // И Также оно является последним на данный момент \r\n                        data.isLastMessage = true;\r\n                        data.fromBot = isBot;\r\n                        setTimeout(() => { \r\n                            return resolve(messages.value.push(data)); \r\n                        }, delay);\r\n                    } else {\r\n                        messages.value[messages.value.length - 1].isLastMessage = false;\r\n                        data.isFirstMessage = false;\r\n                        data.isLastMessage = true;\r\n                        data.fromBot = isBot;\r\n                        setTimeout(() => { \r\n                            // Добавление в общий массив\r\n                            return resolve(messages.value.push(data)); \r\n                        }, delay);\r\n                    }\r\n                }\r\n            } \r\n            // Если массив пуст и сообщений до этого не было.\r\n            else {\r\n                // Указываем то это сообщение будет началом новой партии сообщений\r\n                data.isFirstMessage = true;\r\n                data.isLastMessage = true;\r\n                data.fromBot = isBot;\r\n                setTimeout(() => { \r\n                    // Добавление в общий массив\r\n                    return resolve(messages.value.push(data)); \r\n                }, delay);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            reject(err);\r\n        }\r\n    });\r\n\r\n}\r\n\r\nonMounted(async () => {\r\n    // Отслеживание каждого изменения поля, которе указывает активен ли блок с репликами (опциями)\r\n    // Для того, чтобы выполнять автоматический скролл в конец области блока сообщений\r\n    const blockMessages = document.querySelector('.bot-view__chat-block') as HTMLDivElement;\r\n    watch(()=> isSelectOption.value, () => {\r\n        setTimeout(() => {\r\n            blockMessages.scroll({\r\n                top: blockMessages.scrollHeight,\r\n                behavior: \"smooth\",\r\n            });\r\n        }, 0);\r\n    });\r\n    setTimeout( async() => {\r\n        // При первой загрузке рендерим блок с набором базовых реплик(опций). Но на данном этапе их не видно так как они смещены влево\r\n        // Для анимации\r\n        isSelectOption.value = true;\r\n        const tl_Chat = gsap.timeline();\r\n        const tl_Menu = gsap.timeline();\r\n        // Ожидаем выполнение анимации блока с сообщениями (скатывание сверху вниз)\r\n        await Promise.resolve(tl_Chat.to('.bot-view__chat-block', { delay: 0, duration: 0.4, height: '90%'}));\r\n        // Проверяем если массив пуст, то создаем первые приветственные сообщения для БОТА\r\n        if(!messages.value.length) {\r\n            // значение true первым аргументом будет указывать, что сообщение создается БОТОМ\r\n            await createMessage(true, { id: `ID-${Date.now()}`, content: 'Hello Human!' });\r\n            // Последний аргумент указывает на задержку анимации\r\n            await createMessage(true, { id: `ID-${Date.now()}`, content: 'What can I do for you?' }, 800);\r\n        }\r\n        // Анимация вращения меню кнопки чата\r\n        tl_Menu.to(\".bot-view__bot-menu\", {\r\n            delay: 0.4,\r\n            duration: 0.6,\r\n            left: 'auto',\r\n            x: 5,\r\n            rotation: 370,\r\n            visibility: 'visible',\r\n            ease: \"none\",\r\n        });\r\n        tl_Menu.to(\".bot-view__bot-menu\", {\r\n            duration: 0.5,\r\n            rotation: 360,\r\n            x: 0,\r\n        });\r\n        // Выполняется анимация в которой реплики(опции) выезжают поочередно в блок реплик(опций)\r\n        openOptionsMenu(tl_Menu);\r\n    }, 300);\r\n    // Эффект поступательного движения кнопки чат-бота\r\n    const botMenu = document.getElementById('bot-menu') as HTMLSpanElement;\r\n    botMenu.addEventListener('mouseover', () => {\r\n        gsap.to(botMenu, { duration: 0.5, rotate: 0, });\r\n    });\r\n    botMenu.addEventListener('mouseleave', () => {\r\n        gsap.to(botMenu, { delay: 0.2, duration: 0.5, rotate: 360, });\r\n    });\r\n});\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(messages.value, (message) => {\n        return (_openBlock(), _createBlock(messageBotComp, {\n          data: message,\n          key: message.id,\n          onReadyBotMessage: messageBotReady\n        }, null, 8, [\"data\"]))\n      }), 128)),\n      _withDirectives(_createElementVNode(\"div\", _hoisted_3, [\n        _createVNode(buttonComp, {\n          class: \"option\",\n          id: \"pizza\",\n          onClick: _cache[0] || (_cache[0] = ($event: any) => (selectionOption('pizza')))\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(\"Order pizza!\")\n          ]),\n          _: 1\n        }),\n        _createVNode(buttonComp, {\n          class: \"option\",\n          id: \"alarm\",\n          onClick: _cache[1] || (_cache[1] = ($event: any) => (selectionOption('alarm')))\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(\"Set an alarm\")\n          ]),\n          _: 1\n        }),\n        _createVNode(buttonComp, {\n          class: \"option\",\n          id: \"weather\",\n          onClick: _cache[2] || (_cache[2] = ($event: any) => (selectionOption('weather')))\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(\"Bring out the weather\")\n          ]),\n          _: 1\n        })\n      ], 512), [\n        [_vShow, isSelectOption.value]\n      ])\n    ]),\n    _hoisted_4\n  ]))\n}\n}\n\n})","import script from \"./botView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./botView.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./botView.vue?vue&type=style&index=0&id=dca8b3a0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-dca8b3a0\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"main\" }\n\nimport botView from './views/botView.vue';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(botView)\n  ]))\n}\n}\n\n})","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=76d34379&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport './registerServiceWorker'\r\nimport store from './store'\r\nimport '../src/assets/media/viewport.css';\r\n\r\nconst app = createApp(App);\r\n\r\n\r\napp\r\n    .use(store)\r\n    .mount('#app');\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksteep_bot\"] = self[\"webpackChunksteep_bot\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1130); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["animateText","text","callback","onlyUp","delay","arrayWords","split","resultText","count","word","setTimeout","length","pop","join","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_hoisted_3","_createElementVNode","src","_imports_0","alt","_hoisted_4","_hoisted_5","_imports_1","_defineComponent","__name","props","data","emits","setup","__props","emit","content","ref","contentBotStyle","computed","isFirstMessage","isLastMessage","borderTopLeftRadius","borderBottomLeftRadius","contentUserStyle","borderTopRightRadius","borderBottomRightRadius","onMounted","async","ф","message","document","getElementById","id","fromBot","gsap","to","duration","right","value","container","parentNode","style","marginTop","marginRight","icon","childNodes","visibility","height","left","result","isReady","alignItems","_ctx","_cache","_openBlock","_createElementBlock","key","_normalizeStyle","_toDisplayString","__exports__","_renderSlot","$slots","undefined","script","render","messages","isSelectOption","openOptionsMenu","tl","closeOptionsMenu","messageBotReady","blockMessages","querySelector","scroll","top","scrollHeight","behavior","selectionOption","elementID","timeline","innerText","createMessage","Date","now","isBot","Promise","resolve","reject","lastMessage","push","err","console","log","watch","tl_Chat","tl_Menu","x","rotation","ease","botMenu","addEventListener","rotate","_Fragment","_renderList","_createBlock","messageBotComp","onReadyBotMessage","_withDirectives","_createVNode","buttonComp","onClick","$event","default","_withCtx","_createTextVNode","_","_vShow","botView","register","ready","registered","cached","updatefound","updated","offline","error","createStore","state","getters","mutations","actions","modules","app","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}